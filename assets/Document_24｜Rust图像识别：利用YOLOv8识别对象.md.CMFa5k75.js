import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.D2WelYEY.js";const o="/tanggang_rust/assets/9eaeb50e93568443412d894bcfe87018.DEeHqlfl.jpg",e="/tanggang_rust/assets/a26647d656430b8574405c35bcd94b01.DRHk3gbg.png",r="/tanggang_rust/assets/44442ec72a66cf7c88dd4be951d043b8.Cu-keEZR.jpg",c="/tanggang_rust/assets/da8d52a0e6677977701cfe339d2d3007.B6raMIe7.jpg",B="/tanggang_rust/assets/7239ed2af26ed0908560833838696025.BaIn-mSZ.png",m=JSON.parse('{"title":"24 ｜ Rust 图像识别：利用 YOLOv8 识别对象","description":"","frontmatter":{},"headers":[],"relativePath":"Document/24｜Rust图像识别：利用YOLOv8识别对象.md","filePath":"Document/24｜Rust图像识别：利用YOLOv8识别对象.md","lastUpdated":1740766764000}'),t={name:"Document/24｜Rust图像识别：利用YOLOv8识别对象.md"};function y(i,s,A,F,C,b){return l(),a("div",null,s[0]||(s[0]=[p('<h1 id="_24-rust-图像识别-利用-yolov8-识别对象" tabindex="-1">24 ｜ Rust 图像识别：利用 YOLOv8 识别对象 <a class="header-anchor" href="#_24-rust-图像识别-利用-yolov8-识别对象" aria-label="Permalink to &quot;24 ｜ Rust 图像识别：利用 YOLOv8 识别对象&quot;">​</a></h1><p>你好，我是 Mike。这节课我们来学习如何使用 Rust 对图片中的对象进行识别。</p><p>图像识别是计算机视觉领域中的重要课题，而计算机视觉又是 AI 的重要组成部分，相当于 AI 的眼睛。目前图像识别领域使用最广泛的框架是 YOLO，现在已经迭代到了 v8 版本。而基于 Rust 机器学习框架 Candle，可以方便地实现 YOLOv8 算法。因此，这节课我们继续使用 Candle 框架来实现图片的识别。</p><p>Candle 框架有一个示例，演示了 YOLOv8 的一个简化实现。我在此基础上，将这个源码中的示例独立出来，做成了一个单独的项目，方便你学习（查看 <a href="https://github.com/miketang84/jikeshijian/tree/master/24-candle_yolov8" target="_blank" rel="noreferrer">代码地址</a>）。</p><p>注：这节课的代码适用于 candle_core v0.3 版本。</p><h2 id="yolo-简介" tabindex="-1">YOLO 简介 <a class="header-anchor" href="#yolo-简介" aria-label="Permalink to &quot;YOLO 简介&quot;">​</a></h2><p>YOLO（You Only Look Once）是一种目标检测算法，它可以在一次前向传递中检测出图像中的所有物体的位置和类别。因为只需要看一次，YOLO 被称为 Region-free 方法，相比于 Region-based 方法，YOLO 不需要提前找到可能存在目标的区域（Region）。YOLO 在 2016 年被提出，发表在计算机视觉顶会 CVPR（Computer Vision and Pattern Recognition）上。YOLO 对整个图片进行预测，并且它会一次性输出所有检测到的目标信息，包括类别和位置。</p><p>YOLO 也使用神经网络进行图像识别，一般来说，如果是推理的话，我们需要一个神经网络的预训练模型文件。下面你会看到，在运行示例的时候，会自动从 HuggingFace 下载对应的预训练模型。</p><p>YOLOv8 的模型结构比起之前的版本，会复杂一些，我们来看一下官方整理的图片。</p><p><img src="'+o+'" alt=""></p><p>这节课我们主要是去使用，不展开关于这个模型的讲解。目前官方的预训练模型分成 5 个。</p><ul><li>N：nano。模型最小。探测速度最快，精度最低。</li><li>S：small，模型比 nano 大。</li><li>M：middle，模型比 small 大。</li><li>L：large，模型比 middle 大，比 x 小。</li><li>X：extra large，模型最大。探测速度最慢，精度最高。</li></ul><p>在下面的示例中，我们可以通过参数来指定选择哪个模型。</p><h2 id="yolov8-的能力" tabindex="-1">YOLOv8 的能力 <a class="header-anchor" href="#yolov8-的能力" aria-label="Permalink to &quot;YOLOv8 的能力&quot;">​</a></h2><p>YOLO 发展到第 8 代已经很强大了。它可以对图像做分类、探测、分段、轨迹、姿势等。</p><p><img src="'+e+`" alt="图片"></p><p>了解了 YOLO 的能力，下面我们开始实际用起来。</p><h2 id="动手实验" tabindex="-1">动手实验 <a class="header-anchor" href="#动手实验" aria-label="Permalink to &quot;动手实验&quot;">​</a></h2><p>下载源码：</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">git</span><span style="color:#E06C75;"> clone</span><span style="color:#E06C75;"> https</span><span style="color:#ABB2BF;">:</span><span style="color:#7F848E;font-style:italic;">//github.com/miketang84/jikeshijian</span></span>
<span class="line"><span style="color:#E06C75;">cd</span><span style="color:#E06C75;"> jikeshijian</span><span style="color:#ABB2BF;">/</span><span style="color:#D19A66;">24</span><span style="color:#ABB2BF;">-</span><span style="color:#E06C75;">candle_yolov8</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="物体探测" tabindex="-1">物体探测 <a class="header-anchor" href="#物体探测" aria-label="Permalink to &quot;物体探测&quot;">​</a></h3><p>假设我们有这样一张图片。</p><p><img src="`+r+`" alt="图片"></p><p>编译运行下面这行代码。</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">cargo</span><span style="color:#E06C75;"> run</span><span style="color:#ABB2BF;"> --</span><span style="color:#E06C75;">release</span><span style="color:#ABB2BF;"> -- </span><span style="color:#E06C75;">assets</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">football</span><span style="color:#ABB2BF;">.jpg --</span><span style="color:#E06C75;">which</span><span style="color:#E06C75;"> m</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>请注意，这个运行过程中，会联网从 HuggingFace 上下载模型文件，需要科学上网环境。</p><p>运行输出：</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">$ </span><span style="color:#E06C75;">cargo</span><span style="color:#E06C75;"> run</span><span style="color:#ABB2BF;"> --</span><span style="color:#E06C75;">release</span><span style="color:#ABB2BF;"> -- </span><span style="color:#E06C75;">assets</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">football</span><span style="color:#ABB2BF;">.jpg --</span><span style="color:#E06C75;">which</span><span style="color:#E06C75;"> m</span></span>
<span class="line"><span style="color:#E5C07B;">ProxyChains</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">3.1</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">http</span><span style="color:#ABB2BF;">:</span><span style="color:#7F848E;font-style:italic;">//proxychains.sf.net)</span></span>
<span class="line"><span style="color:#E5C07B;">    Finished</span><span style="color:#E06C75;"> release</span><span style="color:#ABB2BF;"> [</span><span style="color:#E06C75;">optimized</span><span style="color:#ABB2BF;">] </span><span style="color:#61AFEF;">target</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">in</span><span style="color:#D19A66;"> 0.</span><span style="color:#ABB2BF;">08s</span></span>
<span class="line"><span style="color:#E5C07B;">     Running</span><span style="color:#ABB2BF;"> \`</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">release</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">candle_demo_yolov8</span><span style="color:#E06C75;"> assets</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">football</span><span style="color:#ABB2BF;">.jpg --</span><span style="color:#E06C75;">which</span><span style="color:#E06C75;"> m</span><span style="color:#ABB2BF;">\`</span></span>
<span class="line"><span style="color:#E5C07B;">Running</span><span style="color:#E06C75;"> on</span><span style="color:#D19A66;"> CPU</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">to</span><span style="color:#E06C75;"> run</span><span style="color:#E06C75;"> on</span><span style="color:#D19A66;"> GPU</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">build</span><span style="color:#E06C75;"> this</span><span style="color:#E06C75;"> example</span><span style="color:#E06C75;"> with</span><span style="color:#ABB2BF;"> \`--</span><span style="color:#E06C75;">features</span><span style="color:#E06C75;"> cuda</span><span style="color:#ABB2BF;">\`</span></span>
<span class="line"><span style="color:#E06C75;">model</span><span style="color:#E06C75;"> loaded</span></span>
<span class="line"><span style="color:#E06C75;">processing</span><span style="color:#E06C75;"> assets</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">football</span><span style="color:#ABB2BF;">.jpg</span></span>
<span class="line"><span style="color:#E06C75;">generated</span><span style="color:#E06C75;"> predictions</span><span style="color:#E5C07B;"> Tensor</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">dims</span><span style="color:#D19A66;"> 84</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">5460</span><span style="color:#ABB2BF;">; </span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Bbox</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">xmin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0.15629578</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">81.735344</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">xmax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">99.46689</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">281.7202</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">confidence</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0.94353473</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: [] }</span></span>
<span class="line"><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Bbox</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">xmin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">433.88196</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">92.59643</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">xmax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">520.25476</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">248.76715</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">confidence</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0.933658</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: [] }</span></span>
<span class="line"><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Bbox</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">xmin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">569.20465</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">34.737877</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">xmax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">639.8049</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">269.4999</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">confidence</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0.927611</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: [] }</span></span>
<span class="line"><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Bbox</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">xmin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">209.33649</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">16.313568</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">xmax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">388.09424</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">388.7763</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">confidence</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0.92696583</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: [] }</span></span>
<span class="line"><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Bbox</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">xmin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">169.212</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">15.2717285</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">xmax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">312.59946</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">345.16046</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">confidence</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0.900463</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: [] }</span></span>
<span class="line"><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Bbox</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">xmin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">626.709</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">65.91608</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">xmax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">639.791</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">86.72856</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">confidence</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0.33487964</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: [] }</span></span>
<span class="line"><span style="color:#E06C75;">sports</span><span style="color:#E06C75;"> ball</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Bbox</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">xmin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">417.45734</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">315.16333</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">xmax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">484.62384</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymax</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">372.86432</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">confidence</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0.93880117</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: [] }</span></span>
<span class="line"><span style="color:#E06C75;">writing</span><span style="color:#98C379;"> &quot;assets/football.pp.jpg&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>在 assets 目录下生成 football.pp.jpg 文件，打开后效果如下：</p><p><img src="`+c+'" alt="图片"></p><p>可以看到，Yolo 正确识别了 6 个人，和一个运动球。</p><h3 id="姿势探测" tabindex="-1">姿势探测 <a class="header-anchor" href="#姿势探测" aria-label="Permalink to &quot;姿势探测&quot;">​</a></h3><p>我们来看一下，对同一张图片，运行姿势探测的效果。</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">cargo</span><span style="color:#E06C75;"> run</span><span style="color:#ABB2BF;"> --</span><span style="color:#E06C75;">release</span><span style="color:#ABB2BF;"> -- </span><span style="color:#E06C75;">assets</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">football</span><span style="color:#ABB2BF;">.jpg --</span><span style="color:#E06C75;">which</span><span style="color:#E06C75;"> m</span><span style="color:#ABB2BF;"> --</span><span style="color:#E06C75;">task</span><span style="color:#E06C75;"> pose</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>我们的工具在 assets 目录下生成 football.pp.jpg 文件，打开后效果如下：</p><p><img src="'+B+`" alt="图片"></p><p>效果是不是很 cool。下面我们详细解释一下这次实战的代码。</p><h2 id="源码解释" tabindex="-1">源码解释 <a class="header-anchor" href="#源码解释" aria-label="Permalink to &quot;源码解释&quot;">​</a></h2><p>YOLOv8 神经网络模型的原理比较复杂，这节课我们主要讲解这个示例中 Rust 的用法，从中可以学到不少 Rust 相关知识。</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// #[cfg(feature = &quot;mkl&quot;)]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// extern crate intel_mkl_src;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// #[cfg(feature = &quot;accelerate&quot;)]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// extern crate accelerate_src;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">mod</span><span style="color:#ABB2BF;"> model;</span></span>
<span class="line"><span style="color:#C678DD;">use</span><span style="color:#E5C07B;"> model</span><span style="color:#ABB2BF;">::{</span><span style="color:#E5C07B;">Multiples</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">YoloV8</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">YoloV8Pose</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">mod</span><span style="color:#ABB2BF;"> coco_classes;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">use</span><span style="color:#E5C07B;"> candle_core</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">utils</span><span style="color:#ABB2BF;">::{cuda_is_available, metal_is_available};</span></span>
<span class="line"><span style="color:#C678DD;">use</span><span style="color:#E5C07B;"> candle_core</span><span style="color:#ABB2BF;">::{</span><span style="color:#E5C07B;">DType</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Device</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">IndexOp</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Tensor</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">use</span><span style="color:#E5C07B;"> candle_nn</span><span style="color:#ABB2BF;">::{</span><span style="color:#E5C07B;">Module</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">VarBuilder</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">use</span><span style="color:#E5C07B;"> candle_transformers</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">object_detection</span><span style="color:#ABB2BF;">::{non_maximum_suppression, </span><span style="color:#E5C07B;">Bbox</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">KeyPoint</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">use</span><span style="color:#E5C07B;"> clap</span><span style="color:#ABB2BF;">::{</span><span style="color:#E5C07B;">Parser</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ValueEnum</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">use</span><span style="color:#E5C07B;"> image</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">DynamicImage</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Keypoints as reported by ChatGPT :)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Nose</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Left Eye</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Right Eye</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Left Ear</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Right Ear</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Left Shoulder</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Right Shoulder</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Left Elbow</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Right Elbow</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Left Wrist</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Right Wrist</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Left Hip</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Right Hip</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Left Knee</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Right Knee</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Left Ankle</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Right Ankle</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#D19A66;"> KP_CONNECTIONS</span><span style="color:#ABB2BF;">: [(</span><span style="color:#E5C07B;">usize</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">usize</span><span style="color:#ABB2BF;">); </span><span style="color:#D19A66;">16</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">13</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">14</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">13</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">15</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    (</span><span style="color:#D19A66;">14</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">16</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 获取设备，Cpu还是Cuda或Metal</span></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> get_device</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">cpu</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">bool</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Device</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#E06C75;"> cpu</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        Ok</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Device</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Cpu</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#61AFEF;"> cuda_is_available</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">        Ok</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Device</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">new_cuda</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)?)</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#61AFEF;"> metal_is_available</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">        Ok</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Device</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">new_metal</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)?)</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        #[cfg(all(target_os </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;macos&quot;</span><span style="color:#ABB2BF;">, target_arch </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;aarch64&quot;</span><span style="color:#ABB2BF;">))]</span></span>
<span class="line"><span style="color:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#61AFEF;">            println!</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">                &quot;Running on CPU, to run on GPU(metal), build this example with \`--features metal\`&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">            );</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        #[cfg(not(all(target_os </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;macos&quot;</span><span style="color:#ABB2BF;">, target_arch </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;aarch64&quot;</span><span style="color:#ABB2BF;">)))]</span></span>
<span class="line"><span style="color:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#61AFEF;">            println!</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Running on CPU, to run on GPU, build this example with \`--features cuda\`&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#E5C07B;">        Ok</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Device</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Cpu</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 报告对象探测的结果，以及用图像处理工具在图上画出来标注</span></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> report_detect</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;">    pred</span><span style="color:#ABB2BF;">: &amp;</span><span style="color:#E5C07B;">Tensor</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    img</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">DynamicImage</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    w</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">usize</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    h</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">usize</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    confidence_threshold</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    nms_threshold</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    legend_size</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">u32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">DynamicImage</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> pred</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> pred</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">to_device</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E5C07B;">Device</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Cpu</span><span style="color:#ABB2BF;">)?;</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">pred_size</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">npreds</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> pred</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dims2</span><span style="color:#ABB2BF;">()?;</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> nclasses</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> pred_size</span><span style="color:#ABB2BF;"> - </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#C678DD;"> mut</span><span style="color:#E06C75;"> bboxes</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Vec</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Vec</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Bbox</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Vec</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">KeyPoint</span><span style="color:#ABB2BF;">&gt;&gt;&gt;&gt; </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">..</span><span style="color:#E06C75;">nclasses</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">|</span><span style="color:#E06C75;">_</span><span style="color:#56B6C2;">|</span><span style="color:#61AFEF;"> vec!</span><span style="color:#ABB2BF;">[]).</span><span style="color:#61AFEF;">collect</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 选出符合置信区间的结果</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#E06C75;"> index</span><span style="color:#C678DD;"> in</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">..</span><span style="color:#E06C75;">npreds</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> pred</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Vec</span><span style="color:#ABB2BF;">::&lt;</span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">&gt;::</span><span style="color:#61AFEF;">try_from</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">i</span><span style="color:#ABB2BF;">((.., </span><span style="color:#E06C75;">index</span><span style="color:#ABB2BF;">))?)?;</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> confidence</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> *</span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">..].</span><span style="color:#61AFEF;">iter</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">max_by</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">|</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">y</span><span style="color:#56B6C2;">|</span><span style="color:#E06C75;"> x</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">total_cmp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">)).</span><span style="color:#61AFEF;">unwrap</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> confidence</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#E06C75;"> confidence_threshold</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#C678DD;"> mut</span><span style="color:#E06C75;"> class_index</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            for</span><span style="color:#E06C75;"> i</span><span style="color:#C678DD;"> in</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">..</span><span style="color:#E06C75;">nclasses</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#E06C75;"> pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;"> + </span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;"> + </span><span style="color:#E06C75;">class_index</span><span style="color:#ABB2BF;">] {</span></span>
<span class="line"><span style="color:#E06C75;">                    class_index</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> i</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#E06C75;"> pred</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">class_index</span><span style="color:#ABB2BF;"> + </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">&gt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">. {</span></span>
<span class="line"><span style="color:#C678DD;">                let</span><span style="color:#E06C75;"> bbox</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Bbox</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">                    xmin</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">] - </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">] / </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">.,</span></span>
<span class="line"><span style="color:#E06C75;">                    ymin</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">] - </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">] / </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">.,</span></span>
<span class="line"><span style="color:#E06C75;">                    xmax</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">] + </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">] / </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">.,</span></span>
<span class="line"><span style="color:#E06C75;">                    ymax</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">] + </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">] / </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">.,</span></span>
<span class="line"><span style="color:#E06C75;">                    confidence</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                    data</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">vec!</span><span style="color:#ABB2BF;">[],</span></span>
<span class="line"><span style="color:#ABB2BF;">                };</span></span>
<span class="line"><span style="color:#E06C75;">                bboxes</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">class_index</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">bbox</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">    non_maximum_suppression</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#C678DD;">mut</span><span style="color:#E06C75;"> bboxes</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">nms_threshold</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 在原图上标注，并打印标注的框的信息</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">initial_h</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">initial_w</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">img</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">height</span><span style="color:#ABB2BF;">(), </span><span style="color:#E06C75;">img</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">width</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> w_ratio</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> initial_w</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> f32</span><span style="color:#ABB2BF;"> / </span><span style="color:#E06C75;">w</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> f32</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> h_ratio</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> initial_h</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> f32</span><span style="color:#ABB2BF;"> / </span><span style="color:#E06C75;">h</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> f32</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#C678DD;"> mut</span><span style="color:#E06C75;"> img</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> img</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">to_rgb8</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> font</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Vec</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">from</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">include_bytes!</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;roboto-mono-stripped.ttf&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> &amp;[</span><span style="color:#E5C07B;">u8</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> font</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> rusttype</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Font</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">try_from_vec</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">font</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">class_index</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">bboxes_for_class</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">in</span><span style="color:#E06C75;"> bboxes</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">iter</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">enumerate</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#E06C75;"> b</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> bboxes_for_class</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">iter</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#61AFEF;">            println!</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;{}: {:?}&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">coco_classes</span><span style="color:#ABB2BF;">::</span><span style="color:#D19A66;">NAMES</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">class_index</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> xmin</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.xmin * </span><span style="color:#E06C75;">w_ratio</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#E5C07B;"> i32</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> ymin</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.ymin * </span><span style="color:#E06C75;">h_ratio</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#E5C07B;"> i32</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> dx</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.xmax - </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.xmin) * </span><span style="color:#E06C75;">w_ratio</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> dy</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.ymax - </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.ymin) * </span><span style="color:#E06C75;">h_ratio</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#E06C75;"> dx</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">. </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#E06C75;"> dy</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">. {</span></span>
<span class="line"><span style="color:#E5C07B;">                imageproc</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">drawing</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">draw_hollow_rect_mut</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">                    &amp;</span><span style="color:#C678DD;">mut</span><span style="color:#E06C75;"> img</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">                    imageproc</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">rect</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Rect</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">at</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">xmin</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymin</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">of_size</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">dx</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> u32</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">dy</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> u32</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E5C07B;">                    image</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">Rgb</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">255</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]),</span></span>
<span class="line"><span style="color:#ABB2BF;">                );</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#E06C75;"> legend_size</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#C678DD;"> let</span><span style="color:#E5C07B;"> Some</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">font</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> font</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">as_ref</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">                    imageproc</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">drawing</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">draw_filled_rect_mut</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">                        &amp;</span><span style="color:#C678DD;">mut</span><span style="color:#E06C75;"> img</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">                        imageproc</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">rect</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Rect</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">at</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">xmin</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymin</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">of_size</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">dx</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> u32</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">legend_size</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E5C07B;">                        image</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">Rgb</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">170</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]),</span></span>
<span class="line"><span style="color:#ABB2BF;">                    );</span></span>
<span class="line"><span style="color:#C678DD;">                    let</span><span style="color:#E06C75;"> legend</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> format!</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">                        &quot;{}   {:.0}%&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">                        coco_classes</span><span style="color:#ABB2BF;">::</span><span style="color:#D19A66;">NAMES</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">class_index</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#D19A66;">                        100</span><span style="color:#ABB2BF;">. * </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.confidence</span></span>
<span class="line"><span style="color:#ABB2BF;">                    );</span></span>
<span class="line"><span style="color:#E5C07B;">                    imageproc</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">drawing</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">draw_text_mut</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">                        &amp;</span><span style="color:#C678DD;">mut</span><span style="color:#E06C75;"> img</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">                        image</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">Rgb</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">255</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">255</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">255</span><span style="color:#ABB2BF;">]),</span></span>
<span class="line"><span style="color:#E06C75;">                        xmin</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                        ymin</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">                        rusttype</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Scale</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">uniform</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">legend_size</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> f32</span><span style="color:#ABB2BF;"> - </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">.),</span></span>
<span class="line"><span style="color:#E06C75;">                        font</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                        &amp;</span><span style="color:#E06C75;">legend</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                    )</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E5C07B;">    Ok</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">DynamicImage</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">ImageRgb8</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">img</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 报告姿态探测的结果，以及用图像处理工具在图上画出来标注</span></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> report_pose</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;">    pred</span><span style="color:#ABB2BF;">: &amp;</span><span style="color:#E5C07B;">Tensor</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    img</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">DynamicImage</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    w</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">usize</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    h</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">usize</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    confidence_threshold</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    nms_threshold</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">DynamicImage</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> pred</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> pred</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">to_device</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E5C07B;">Device</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Cpu</span><span style="color:#ABB2BF;">)?;</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">pred_size</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">npreds</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> pred</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dims2</span><span style="color:#ABB2BF;">()?;</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#E06C75;"> pred_size</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> 17</span><span style="color:#ABB2BF;"> * </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;"> + </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;"> + </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        candle_core</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">bail!</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;unexpected pred-size {pred_size}&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#C678DD;"> mut</span><span style="color:#E06C75;"> bboxes</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> vec!</span><span style="color:#ABB2BF;">[];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 选出符合置信区间的结果</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#E06C75;"> index</span><span style="color:#C678DD;"> in</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">..</span><span style="color:#E06C75;">npreds</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> pred</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Vec</span><span style="color:#ABB2BF;">::&lt;</span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">&gt;::</span><span style="color:#61AFEF;">try_from</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">i</span><span style="color:#ABB2BF;">((.., </span><span style="color:#E06C75;">index</span><span style="color:#ABB2BF;">))?)?;</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> confidence</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> confidence</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#E06C75;"> confidence_threshold</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> keypoints</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">..</span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">|</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">|</span><span style="color:#E5C07B;"> KeyPoint</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">                    x</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;"> * </span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;"> + </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">                    y</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;"> * </span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;"> + </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">                    mask</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;"> * </span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;"> + </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">                })</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">collect</span><span style="color:#ABB2BF;">::&lt;</span><span style="color:#E5C07B;">Vec</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">_</span><span style="color:#ABB2BF;">&gt;&gt;();</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> bbox</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Bbox</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">                xmin</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">] - </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">] / </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">.,</span></span>
<span class="line"><span style="color:#E06C75;">                ymin</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">] - </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">] / </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">.,</span></span>
<span class="line"><span style="color:#E06C75;">                xmax</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">] + </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">] / </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">.,</span></span>
<span class="line"><span style="color:#E06C75;">                ymax</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">] + </span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">] / </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">.,</span></span>
<span class="line"><span style="color:#E06C75;">                confidence</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                data</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">keypoints</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            };</span></span>
<span class="line"><span style="color:#E06C75;">            bboxes</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">bbox</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#C678DD;"> mut</span><span style="color:#E06C75;"> bboxes</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> vec!</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">bboxes</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#61AFEF;">    non_maximum_suppression</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#C678DD;">mut</span><span style="color:#E06C75;"> bboxes</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">nms_threshold</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> bboxes</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> &amp;</span><span style="color:#E06C75;">bboxes</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 在原图上标注，并打印标注的框和姿势的信息</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">initial_h</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">initial_w</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">img</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">height</span><span style="color:#ABB2BF;">(), </span><span style="color:#E06C75;">img</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">width</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> w_ratio</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> initial_w</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> f32</span><span style="color:#ABB2BF;"> / </span><span style="color:#E06C75;">w</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> f32</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> h_ratio</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> initial_h</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> f32</span><span style="color:#ABB2BF;"> / </span><span style="color:#E06C75;">h</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> f32</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#C678DD;"> mut</span><span style="color:#E06C75;"> img</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> img</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">to_rgb8</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#E06C75;"> b</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> bboxes</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">iter</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#61AFEF;">        println!</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;{b:?}&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> xmin</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.xmin * </span><span style="color:#E06C75;">w_ratio</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#E5C07B;"> i32</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> ymin</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.ymin * </span><span style="color:#E06C75;">h_ratio</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#E5C07B;"> i32</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> dx</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.xmax - </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.xmin) * </span><span style="color:#E06C75;">w_ratio</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> dy</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.ymax - </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.ymin) * </span><span style="color:#E06C75;">h_ratio</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> dx</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">. </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#E06C75;"> dy</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">. {</span></span>
<span class="line"><span style="color:#E5C07B;">            imageproc</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">drawing</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">draw_hollow_rect_mut</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">                &amp;</span><span style="color:#C678DD;">mut</span><span style="color:#E06C75;"> img</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">                imageproc</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">rect</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Rect</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">at</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">xmin</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ymin</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">of_size</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">dx</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> u32</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">dy</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> u32</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E5C07B;">                image</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">Rgb</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">255</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]),</span></span>
<span class="line"><span style="color:#ABB2BF;">            );</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#E06C75;"> kp</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> b</span><span style="color:#ABB2BF;">.data.</span><span style="color:#61AFEF;">iter</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#E06C75;"> kp</span><span style="color:#ABB2BF;">.mask </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 0.6</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">                continue</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> x</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">kp</span><span style="color:#ABB2BF;">.x * </span><span style="color:#E06C75;">w_ratio</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#E5C07B;"> i32</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> y</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">kp</span><span style="color:#ABB2BF;">.y * </span><span style="color:#E06C75;">h_ratio</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#E5C07B;"> i32</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">            imageproc</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">drawing</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">draw_filled_circle_mut</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">                &amp;</span><span style="color:#C678DD;">mut</span><span style="color:#E06C75;"> img</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                (</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#D19A66;">                2</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">                image</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">Rgb</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">255</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]),</span></span>
<span class="line"><span style="color:#ABB2BF;">            );</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;"> &amp;(</span><span style="color:#E06C75;">idx1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">idx2</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">in</span><span style="color:#D19A66;"> KP_CONNECTIONS</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">iter</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> kp1</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> &amp;</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.data[</span><span style="color:#E06C75;">idx1</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> kp2</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> &amp;</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">.data[</span><span style="color:#E06C75;">idx2</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#E06C75;"> kp1</span><span style="color:#ABB2BF;">.mask </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 0.6</span><span style="color:#56B6C2;"> ||</span><span style="color:#E06C75;"> kp2</span><span style="color:#ABB2BF;">.mask </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 0.6</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">                continue</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#E5C07B;">            imageproc</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">drawing</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">draw_line_segment_mut</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">                &amp;</span><span style="color:#C678DD;">mut</span><span style="color:#E06C75;"> img</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                (</span><span style="color:#E06C75;">kp1</span><span style="color:#ABB2BF;">.x * </span><span style="color:#E06C75;">w_ratio</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">kp1</span><span style="color:#ABB2BF;">.y * </span><span style="color:#E06C75;">h_ratio</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">                (</span><span style="color:#E06C75;">kp2</span><span style="color:#ABB2BF;">.x * </span><span style="color:#E06C75;">w_ratio</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">kp2</span><span style="color:#ABB2BF;">.y * </span><span style="color:#E06C75;">h_ratio</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E5C07B;">                image</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">Rgb</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">255</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">255</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]),</span></span>
<span class="line"><span style="color:#ABB2BF;">            );</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E5C07B;">    Ok</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">DynamicImage</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">ImageRgb8</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">img</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 选择模型尺寸</span></span>
<span class="line"><span style="color:#ABB2BF;">#[derive(</span><span style="color:#E5C07B;">Clone</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Copy</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ValueEnum</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Debug</span><span style="color:#ABB2BF;">)]</span></span>
<span class="line"><span style="color:#C678DD;">enum</span><span style="color:#E5C07B;"> Which</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">    N</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">    S</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">    M</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">    L</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">    X</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 对象探测任务还是姿势探测任务</span></span>
<span class="line"><span style="color:#ABB2BF;">#[derive(</span><span style="color:#E5C07B;">Clone</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Copy</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ValueEnum</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Debug</span><span style="color:#ABB2BF;">)]</span></span>
<span class="line"><span style="color:#C678DD;">enum</span><span style="color:#E5C07B;"> YoloTask</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">    Detect</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">    Pose</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 命令行参数定义，基于Clap</span></span>
<span class="line"><span style="color:#ABB2BF;">#[derive(</span><span style="color:#E5C07B;">Parser</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Debug</span><span style="color:#ABB2BF;">)]</span></span>
<span class="line"><span style="color:#ABB2BF;">#[command(author, version, about, long_about </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> None</span><span style="color:#ABB2BF;">)]</span></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> struct</span><span style="color:#E5C07B;"> Args</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /// 是否运行在CPU上面</span></span>
<span class="line"><span style="color:#ABB2BF;">    #[arg(long)]</span></span>
<span class="line"><span style="color:#E06C75;">    cpu</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">bool</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /// 是否记录日志</span></span>
<span class="line"><span style="color:#ABB2BF;">    #[arg(long)]</span></span>
<span class="line"><span style="color:#E06C75;">    tracing</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">bool</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /// 模型文件路径</span></span>
<span class="line"><span style="color:#ABB2BF;">    #[arg(long)]</span></span>
<span class="line"><span style="color:#E06C75;">    model</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Option</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt;,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /// 用哪一个模型</span></span>
<span class="line"><span style="color:#ABB2BF;">    #[arg(long, value_enum, default_value_t </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> Which</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">S</span><span style="color:#ABB2BF;">)]</span></span>
<span class="line"><span style="color:#E06C75;">    which</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Which</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    images</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Vec</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt;,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /// 模型置信门槛</span></span>
<span class="line"><span style="color:#ABB2BF;">    #[arg(long, default_value_t </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> 0.25)]</span></span>
<span class="line"><span style="color:#E06C75;">    confidence_threshold</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /// non-maximum suppression的阈值</span></span>
<span class="line"><span style="color:#ABB2BF;">    #[arg(long, default_value_t </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> 0.45)]</span></span>
<span class="line"><span style="color:#E06C75;">    nms_threshold</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /// 要执行的任务</span></span>
<span class="line"><span style="color:#ABB2BF;">    #[arg(long, default_value </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;detect&quot;</span><span style="color:#ABB2BF;">)]</span></span>
<span class="line"><span style="color:#E06C75;">    task</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">YoloTask</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /// 标注的字体的大小</span></span>
<span class="line"><span style="color:#ABB2BF;">    #[arg(long, default_value_t </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> 14)]</span></span>
<span class="line"><span style="color:#E06C75;">    legend_size</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">u32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">impl</span><span style="color:#E5C07B;"> Args</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    fn</span><span style="color:#61AFEF;"> model</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">anyhow</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">std</span><span style="color:#ABB2BF;">::</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">PathBuf</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> match</span><span style="color:#ABB2BF;"> &amp;</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.model {</span></span>
<span class="line"><span style="color:#E5C07B;">            Some</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">model</span><span style="color:#ABB2BF;">) =&gt; </span><span style="color:#E5C07B;">std</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">PathBuf</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">from</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">model</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E5C07B;">            None</span><span style="color:#ABB2BF;"> =&gt; {</span></span>
<span class="line"><span style="color:#C678DD;">                let</span><span style="color:#E06C75;"> api</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> hf_hub</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">api</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">sync</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Api</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">new</span><span style="color:#ABB2BF;">()?;</span></span>
<span class="line"><span style="color:#C678DD;">                let</span><span style="color:#E06C75;"> api</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> api</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">model</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;lmz/candle-yolo-v8&quot;</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">to_string</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#C678DD;">                let</span><span style="color:#E06C75;"> size</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> match</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.which {</span></span>
<span class="line"><span style="color:#E5C07B;">                    Which</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">N</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#98C379;">&quot;n&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">                    Which</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">S</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#98C379;">&quot;s&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">                    Which</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">M</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#98C379;">&quot;m&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">                    Which</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">L</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#98C379;">&quot;l&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">                    Which</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">X</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#98C379;">&quot;x&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                };</span></span>
<span class="line"><span style="color:#C678DD;">                let</span><span style="color:#E06C75;"> task</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> match</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.task {</span></span>
<span class="line"><span style="color:#E5C07B;">                    YoloTask</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Pose</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#98C379;">&quot;-pose&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">                    YoloTask</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Detect</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                };</span></span>
<span class="line"><span style="color:#E06C75;">                api</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#61AFEF;">format!</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;yolov8{size}{task}.safetensors&quot;</span><span style="color:#ABB2BF;">))?</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        };</span></span>
<span class="line"><span style="color:#E5C07B;">        Ok</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> trait</span><span style="color:#E5C07B;"> Task</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Module</span><span style="color:#ABB2BF;"> + </span><span style="color:#E5C07B;">Sized</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    fn</span><span style="color:#61AFEF;"> load</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vb</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">VarBuilder</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">multiples</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Multiples</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Self</span><span style="color:#ABB2BF;">&gt;;</span></span>
<span class="line"><span style="color:#C678DD;">    fn</span><span style="color:#61AFEF;"> report</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;">        pred</span><span style="color:#ABB2BF;">: &amp;</span><span style="color:#E5C07B;">Tensor</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        img</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">DynamicImage</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        w</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">usize</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        h</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">usize</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        confidence_threshold</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        nms_threshold</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        legend_size</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">u32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    ) -&gt; </span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">DynamicImage</span><span style="color:#ABB2BF;">&gt;;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Yolov8为对象探测的类型载体</span></span>
<span class="line"><span style="color:#C678DD;">impl</span><span style="color:#E5C07B;"> Task</span><span style="color:#C678DD;"> for</span><span style="color:#E5C07B;"> YoloV8</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    fn</span><span style="color:#61AFEF;"> load</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vb</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">VarBuilder</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">multiples</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Multiples</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Self</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#E5C07B;">        YoloV8</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">load</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vb</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">multiples</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">/* num_classes=*/</span><span style="color:#D19A66;"> 80</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    fn</span><span style="color:#61AFEF;"> report</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;">        pred</span><span style="color:#ABB2BF;">: &amp;</span><span style="color:#E5C07B;">Tensor</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        img</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">DynamicImage</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        w</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">usize</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        h</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">usize</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        confidence_threshold</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        nms_threshold</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        legend_size</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">u32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    ) -&gt; </span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">DynamicImage</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#61AFEF;">        report_detect</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;">            pred</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            img</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            w</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            h</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            confidence_threshold</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            nms_threshold</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            legend_size</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        )</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// YoloV8Pose为姿势探测的类型载体</span></span>
<span class="line"><span style="color:#C678DD;">impl</span><span style="color:#E5C07B;"> Task</span><span style="color:#C678DD;"> for</span><span style="color:#E5C07B;"> YoloV8Pose</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    fn</span><span style="color:#61AFEF;"> load</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vb</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">VarBuilder</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">multiples</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Multiples</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Self</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#E5C07B;">        YoloV8Pose</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">load</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vb</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">multiples</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">/* num_classes=*/</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">, (</span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    fn</span><span style="color:#61AFEF;"> report</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;">        pred</span><span style="color:#ABB2BF;">: &amp;</span><span style="color:#E5C07B;">Tensor</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        img</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">DynamicImage</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        w</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">usize</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        h</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">usize</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        confidence_threshold</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        nms_threshold</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        _legend_size</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">u32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    ) -&gt; </span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">DynamicImage</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#61AFEF;">        report_pose</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">pred</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">img</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">w</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">h</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">confidence_threshold</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">nms_threshold</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 主体运行逻辑</span></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> run</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Task</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Args</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">anyhow</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;()&gt; {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> device</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> get_device</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">.cpu)?;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 选择模型尺寸，加载模型权重参数进来</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> multiples</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> match</span><span style="color:#E06C75;"> args</span><span style="color:#ABB2BF;">.which {</span></span>
<span class="line"><span style="color:#E5C07B;">        Which</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">N</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#E5C07B;">Multiples</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">n</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#E5C07B;">        Which</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">S</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#E5C07B;">Multiples</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">s</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#E5C07B;">        Which</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">M</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#E5C07B;">Multiples</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">m</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#E5C07B;">        Which</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">L</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#E5C07B;">Multiples</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">l</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#E5C07B;">        Which</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">X</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#E5C07B;">Multiples</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">x</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> model</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> args</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">model</span><span style="color:#ABB2BF;">()?;</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> vb</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> unsafe</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">VarBuilder</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">from_mmaped_safetensors</span><span style="color:#ABB2BF;">(&amp;[</span><span style="color:#E06C75;">model</span><span style="color:#ABB2BF;">], </span><span style="color:#E5C07B;">DType</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">F32</span><span style="color:#ABB2BF;">, &amp;</span><span style="color:#E06C75;">device</span><span style="color:#ABB2BF;">)? };</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> model</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> T</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">load</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vb</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">multiples</span><span style="color:#ABB2BF;">)?;</span></span>
<span class="line"><span style="color:#61AFEF;">    println!</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;model loaded&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#E06C75;"> image_name</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> args</span><span style="color:#ABB2BF;">.images.</span><span style="color:#61AFEF;">iter</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#61AFEF;">        println!</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;processing {image_name}&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#C678DD;"> mut</span><span style="color:#E06C75;"> image_name</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> std</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">PathBuf</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">from</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">image_name</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> original_image</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> image</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">io</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Reader</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">open</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E06C75;">image_name</span><span style="color:#ABB2BF;">)?</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">decode</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">map_err</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">candle_core</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Error</span><span style="color:#ABB2BF;">::</span><span style="color:#E06C75;">wrap</span><span style="color:#ABB2BF;">)?;</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">width</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">height</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> w</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> original_image</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">width</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">as</span><span style="color:#E5C07B;"> usize</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> h</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> original_image</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">height</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">as</span><span style="color:#E5C07B;"> usize</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#E06C75;"> w</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> h</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">                let</span><span style="color:#E06C75;"> w</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> w</span><span style="color:#ABB2BF;"> * </span><span style="color:#D19A66;">640</span><span style="color:#ABB2BF;"> / </span><span style="color:#E06C75;">h</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                //</span></span>
<span class="line"><span style="color:#ABB2BF;">                (</span><span style="color:#E06C75;">w</span><span style="color:#ABB2BF;"> / </span><span style="color:#D19A66;">32</span><span style="color:#ABB2BF;"> * </span><span style="color:#D19A66;">32</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">640</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">                let</span><span style="color:#E06C75;"> h</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> h</span><span style="color:#ABB2BF;"> * </span><span style="color:#D19A66;">640</span><span style="color:#ABB2BF;"> / </span><span style="color:#E06C75;">w</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">                (</span><span style="color:#D19A66;">640</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">h</span><span style="color:#ABB2BF;"> / </span><span style="color:#D19A66;">32</span><span style="color:#ABB2BF;"> * </span><span style="color:#D19A66;">32</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        };</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> image_t</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> img</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> original_image</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resize_exact</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;">                width</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> u32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                height</span><span style="color:#C678DD;"> as</span><span style="color:#E5C07B;"> u32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">                image</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">imageops</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">FilterType</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">CatmullRom</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            );</span></span>
<span class="line"><span style="color:#C678DD;">            let</span><span style="color:#E06C75;"> data</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> img</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">to_rgb8</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">into_raw</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">            Tensor</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">from_vec</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;">                data</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                (</span><span style="color:#E06C75;">img</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">height</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">as</span><span style="color:#E5C07B;"> usize</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">img</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">width</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">as</span><span style="color:#E5C07B;"> usize</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">                &amp;</span><span style="color:#E06C75;">device</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            )?</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">permute</span><span style="color:#ABB2BF;">((</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">))?</span></span>
<span class="line"><span style="color:#ABB2BF;">        };</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> image_t</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">image_t</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">unsqueeze</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)?.</span><span style="color:#61AFEF;">to_dtype</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">DType</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">F32</span><span style="color:#ABB2BF;">)? * (</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">. / </span><span style="color:#D19A66;">255</span><span style="color:#ABB2BF;">.))?;</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> predictions</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> model</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forward</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E06C75;">image_t</span><span style="color:#ABB2BF;">)?.</span><span style="color:#61AFEF;">squeeze</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)?;</span></span>
<span class="line"><span style="color:#61AFEF;">        println!</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;generated predictions {predictions:?}&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> image_t</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> T</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">report</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">            &amp;</span><span style="color:#E06C75;">predictions</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            original_image</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            width</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            height</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            args</span><span style="color:#ABB2BF;">.confidence_threshold,</span></span>
<span class="line"><span style="color:#E06C75;">            args</span><span style="color:#ABB2BF;">.nms_threshold,</span></span>
<span class="line"><span style="color:#E06C75;">            args</span><span style="color:#ABB2BF;">.legend_size,</span></span>
<span class="line"><span style="color:#ABB2BF;">        )?;</span></span>
<span class="line"><span style="color:#E06C75;">        image_name</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">set_extension</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;pp.jpg&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">        println!</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;writing {image_name:?}&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">        image_t</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">save</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">image_name</span><span style="color:#ABB2BF;">)?</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">    Ok</span><span style="color:#ABB2BF;">(())</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 程序入口</span></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">() -&gt; </span><span style="color:#E5C07B;">anyhow</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;()&gt; {</span></span>
<span class="line"><span style="color:#C678DD;">    use</span><span style="color:#E5C07B;"> tracing_chrome</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">ChromeLayerBuilder</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    use</span><span style="color:#E5C07B;"> tracing_subscriber</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">prelude</span><span style="color:#ABB2BF;">::*;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> args</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Args</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">parse</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> _guard</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> if</span><span style="color:#E06C75;"> args</span><span style="color:#ABB2BF;">.tracing {</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">chrome_layer</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">guard</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> ChromeLayerBuilder</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">new</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">        tracing_subscriber</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">registry</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">with</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">chrome_layer</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">init</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">        Some</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">guard</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        None</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    match</span><span style="color:#E06C75;"> args</span><span style="color:#ABB2BF;">.task {</span></span>
<span class="line"><span style="color:#E5C07B;">        YoloTask</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Detect</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#61AFEF;">run</span><span style="color:#ABB2BF;">::&lt;</span><span style="color:#E5C07B;">YoloV8</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">)?,</span></span>
<span class="line"><span style="color:#E5C07B;">        YoloTask</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Pose</span><span style="color:#ABB2BF;"> =&gt; </span><span style="color:#61AFEF;">run</span><span style="color:#ABB2BF;">::&lt;</span><span style="color:#E5C07B;">YoloV8Pose</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">)?,</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E5C07B;">    Ok</span><span style="color:#ABB2BF;">(())</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br><span class="line-number">266</span><br><span class="line-number">267</span><br><span class="line-number">268</span><br><span class="line-number">269</span><br><span class="line-number">270</span><br><span class="line-number">271</span><br><span class="line-number">272</span><br><span class="line-number">273</span><br><span class="line-number">274</span><br><span class="line-number">275</span><br><span class="line-number">276</span><br><span class="line-number">277</span><br><span class="line-number">278</span><br><span class="line-number">279</span><br><span class="line-number">280</span><br><span class="line-number">281</span><br><span class="line-number">282</span><br><span class="line-number">283</span><br><span class="line-number">284</span><br><span class="line-number">285</span><br><span class="line-number">286</span><br><span class="line-number">287</span><br><span class="line-number">288</span><br><span class="line-number">289</span><br><span class="line-number">290</span><br><span class="line-number">291</span><br><span class="line-number">292</span><br><span class="line-number">293</span><br><span class="line-number">294</span><br><span class="line-number">295</span><br><span class="line-number">296</span><br><span class="line-number">297</span><br><span class="line-number">298</span><br><span class="line-number">299</span><br><span class="line-number">300</span><br><span class="line-number">301</span><br><span class="line-number">302</span><br><span class="line-number">303</span><br><span class="line-number">304</span><br><span class="line-number">305</span><br><span class="line-number">306</span><br><span class="line-number">307</span><br><span class="line-number">308</span><br><span class="line-number">309</span><br><span class="line-number">310</span><br><span class="line-number">311</span><br><span class="line-number">312</span><br><span class="line-number">313</span><br><span class="line-number">314</span><br><span class="line-number">315</span><br><span class="line-number">316</span><br><span class="line-number">317</span><br><span class="line-number">318</span><br><span class="line-number">319</span><br><span class="line-number">320</span><br><span class="line-number">321</span><br><span class="line-number">322</span><br><span class="line-number">323</span><br><span class="line-number">324</span><br><span class="line-number">325</span><br><span class="line-number">326</span><br><span class="line-number">327</span><br><span class="line-number">328</span><br><span class="line-number">329</span><br><span class="line-number">330</span><br><span class="line-number">331</span><br><span class="line-number">332</span><br><span class="line-number">333</span><br><span class="line-number">334</span><br><span class="line-number">335</span><br><span class="line-number">336</span><br><span class="line-number">337</span><br><span class="line-number">338</span><br><span class="line-number">339</span><br><span class="line-number">340</span><br><span class="line-number">341</span><br><span class="line-number">342</span><br><span class="line-number">343</span><br><span class="line-number">344</span><br><span class="line-number">345</span><br><span class="line-number">346</span><br><span class="line-number">347</span><br><span class="line-number">348</span><br><span class="line-number">349</span><br><span class="line-number">350</span><br><span class="line-number">351</span><br><span class="line-number">352</span><br><span class="line-number">353</span><br><span class="line-number">354</span><br><span class="line-number">355</span><br><span class="line-number">356</span><br><span class="line-number">357</span><br><span class="line-number">358</span><br><span class="line-number">359</span><br><span class="line-number">360</span><br><span class="line-number">361</span><br><span class="line-number">362</span><br><span class="line-number">363</span><br><span class="line-number">364</span><br><span class="line-number">365</span><br><span class="line-number">366</span><br><span class="line-number">367</span><br><span class="line-number">368</span><br><span class="line-number">369</span><br><span class="line-number">370</span><br><span class="line-number">371</span><br><span class="line-number">372</span><br><span class="line-number">373</span><br><span class="line-number">374</span><br><span class="line-number">375</span><br><span class="line-number">376</span><br><span class="line-number">377</span><br><span class="line-number">378</span><br><span class="line-number">379</span><br><span class="line-number">380</span><br><span class="line-number">381</span><br><span class="line-number">382</span><br><span class="line-number">383</span><br><span class="line-number">384</span><br><span class="line-number">385</span><br><span class="line-number">386</span><br><span class="line-number">387</span><br><span class="line-number">388</span><br><span class="line-number">389</span><br><span class="line-number">390</span><br><span class="line-number">391</span><br><span class="line-number">392</span><br><span class="line-number">393</span><br><span class="line-number">394</span><br><span class="line-number">395</span><br><span class="line-number">396</span><br><span class="line-number">397</span><br><span class="line-number">398</span><br><span class="line-number">399</span><br><span class="line-number">400</span><br><span class="line-number">401</span><br><span class="line-number">402</span><br><span class="line-number">403</span><br><span class="line-number">404</span><br><span class="line-number">405</span><br><span class="line-number">406</span><br><span class="line-number">407</span><br><span class="line-number">408</span><br><span class="line-number">409</span><br><span class="line-number">410</span><br><span class="line-number">411</span><br><span class="line-number">412</span><br><span class="line-number">413</span><br><span class="line-number">414</span><br><span class="line-number">415</span><br><span class="line-number">416</span><br><span class="line-number">417</span><br><span class="line-number">418</span><br><span class="line-number">419</span><br><span class="line-number">420</span><br><span class="line-number">421</span><br><span class="line-number">422</span><br><span class="line-number">423</span><br><span class="line-number">424</span><br><span class="line-number">425</span><br><span class="line-number">426</span><br><span class="line-number">427</span><br><span class="line-number">428</span><br><span class="line-number">429</span><br><span class="line-number">430</span><br><span class="line-number">431</span><br><span class="line-number">432</span><br><span class="line-number">433</span><br><span class="line-number">434</span><br><span class="line-number">435</span><br><span class="line-number">436</span><br><span class="line-number">437</span><br><span class="line-number">438</span><br><span class="line-number">439</span><br><span class="line-number">440</span><br><span class="line-number">441</span><br><span class="line-number">442</span><br><span class="line-number">443</span><br><span class="line-number">444</span><br><span class="line-number">445</span><br><span class="line-number">446</span><br><span class="line-number">447</span><br><span class="line-number">448</span><br><span class="line-number">449</span><br><span class="line-number">450</span><br><span class="line-number">451</span><br><span class="line-number">452</span><br><span class="line-number">453</span><br><span class="line-number">454</span><br><span class="line-number">455</span><br><span class="line-number">456</span><br><span class="line-number">457</span><br><span class="line-number">458</span><br><span class="line-number">459</span><br><span class="line-number">460</span><br><span class="line-number">461</span><br><span class="line-number">462</span><br><span class="line-number">463</span><br><span class="line-number">464</span><br><span class="line-number">465</span><br><span class="line-number">466</span><br><span class="line-number">467</span><br><span class="line-number">468</span><br><span class="line-number">469</span><br><span class="line-number">470</span><br><span class="line-number">471</span><br><span class="line-number">472</span><br><span class="line-number">473</span><br><span class="line-number">474</span><br><span class="line-number">475</span><br><span class="line-number">476</span><br><span class="line-number">477</span><br><span class="line-number">478</span><br><span class="line-number">479</span><br></div></div><p>我挑选里面一些重要的内容来讲解一下。</p><p>第 7 ～ 8 行，加载模型模块。YOLOv8 的模型实现都放在这里面，它在 Candle 的平台基础上实现了一个简易版本的 Darknet 神经网络引擎。第 9 行，加载 coco 数据集分类表。YOLOv8 对数据分成 80 种类别。你可以打开 coco_classes.rs 文件查看。</p><p>第 11 ～ 14 行，引入 Candle 基础组件。第 15 行引用 clap 赋能命令行功能。这个在上一讲中已经讲过了。第 16 行引入 image crate。我们在这个例子里处理图片使用的是 image 和 imageproc 两个 crate。</p><p>第 36 ～ 53 行是人体姿势的参数配置 ‎KP_CONNECTIONS。</p><p>第 57 ～ 77 行，是在 candle 中获取能使用的设备的函数。可以看到，Linux 和 Windows 下我们可以使用 CUDA，mac 下我们可以使用 Metal。</p><p>第 79 ～ 167 行，report_detect 是第一个任务，对象探测的业务代码。第 169 ～ 258 行，report_pose 是第二个任务，姿势探测的业务代码。这两个任务我们等会儿还会再说到。</p><p>第 260 ～ 267 行，定义选用哪个模型，分别对应前面讲到的 N、S、M、L、X。第 269 ～ 273 行，定义对象探测和姿势探测两个不同的任务。第 275 ～ 311 行，定义命令行参数对象 Args，你可以关注一下各个字段的默认值。第 313 ～ 336 行，定义 model 函数，实际是加载到模型的正确路径，如果本地没有，就会从 HuggingFace 上下载。</p><p>第 338 ～ 349 行，定义 Task trait，它依赖另外两个 trait：Module 和 Sized。Module 来自 <a href="https://docs.rs/candle-nn/latest/candle_nn/trait.Module.html" target="_blank" rel="noreferrer">candle_nn crate</a>，表示神经网络中的一个模块，有向前推理 forward 的功能。Sized 来自 <a href="https://doc.rust-lang.org/std/marker/trait.Sized.html" target="_blank" rel="noreferrer">Rust std 标准库</a>，表示被实现的类型是固定尺寸的。</p><p>第 351 ～ 375 行，为 YOLOv8 实现 Task trait，YOLOv8 就是我们用于目标探测的任务承载类型。第 377 ～ 393，为 YOLOv8Pose 实现 Task trait，YOLOv8Pose 就是我们用于姿势探测的任务承载类型。</p><p>第 395 ～ 459 行是业务内容。第 461 ～ 480 行是 main 函数，里面做了一些日志配置，并且根据任务类型分配到 YOLOv8 或 YOLOv8Pose 两个不同的任务去。</p><p>我们看到，这里使用了 <code>run::&lt;YoloV8&gt;(args)</code> 这种写法，再对照 run 的函数签名：</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> run</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Task</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Args</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">anyhow</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;()&gt; {</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个函数签名中有一个类型参数 T，被 Task 约束。根据 <a href="https://time.geekbang.org/column/article/724776" target="_blank" rel="noreferrer">第 10 讲</a> 的内容，我们可以说类型 T 具有 Task 的能力。 <code>::&lt;&gt;</code> 是 turbofish 语法，用来将具体的类型传递进函数的类型参数中。</p><p>进入 <code>run()</code> 函数中，我们继续看。第 405、406 行，根据指定的不同的模型，将预训练模型的内容加载成 model 实例。第 407 行有个 <code>T::load()</code> 写法，实际就是 YOLOv8 和 YOLOv8Pose 上都实现了 <code>load()</code> 关联函数，它定义在 Task trait 中。</p><p>然后第 409 行可以批量对多个图片进行操作，这个需要你在命令行中传参数指定。我们前面的示例只处理一张图片。然后下面第 415 ～ 426 行，是对图片尺寸的规约化处理。因为 YOLOV8 只能在 640px x 640px 的图片上进行检测，所以需要在代码中预处理一下。</p><p>第 427 ～ 440 行是将处理后的图片加载成 Tensor 对象。第 441 ～ 442 行，执行推理预测。第 444 ～ 452 行，调用各自任务的汇报业务。第 453 ～ 455 行，生成处理后的图片，写入磁盘中。</p><p>第 444 行出现了 <code>T::report()</code>，解释跟前面一样，实际就是 YOLOv8 和 YOLOv8Pose 上都实现了 <code>report()</code> 关联函数，它定义在 Task trait 中。然后这个 <code>T::report()</code> 会进一步路由到 <code>report_detect()</code> 和 <code>report_pose()</code> 函数中，各自调用。</p><p>在各自的 report 函数中，会对上一步 YOLOv8 预测的边框值按置信区间进行筛选，然后对图片添加标注，也就是画那些线和框。这样就生成了我们看到的效果图的内存对象。</p><p>到这里为止，全部代码就讲解完成了。细节比较生硬，还是图片好玩！</p><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h2><p>这节课我们使用 Rust 实现了 Yolov8 算法探测图像中的对象和人物的姿势。从实现过程来说，并不比 Python 版本的实现复杂多少。而且从部署上来讲，Rust 编译后就一个二进制可执行文件，对于做成一个软件（后面两讲我们会讲如何用 GUI 界面）要方便很多。</p><p>另一方面，代码中对于函数的返回值，使用了 <code>anyhow::Result&lt;T&gt;</code>。上节课我们讲过，使用 anyhow 的返回类型能够大大减少我们的心智负担。</p><p>这个版本的 Yolov8 的算法，是实现在 Candle 框架这个平台上的，你可以研究一下 model.rs 文件，可以看到，代码量非常少。因为有了 Candle 的基础设施，实现一个新的神经网络算法其实非常简单。</p><p>以前，当我们想学习图像识别的时候，我们就得求助于 Python 或 C++。以后你也可以使用 Rust 玩起来了，我以后会持续地输出关于 Rust 在 AI 领域的应用，你可以持续关注，我们一起推进 Rust 在 AI 领域的影响力。</p><h2 id="思考题" tabindex="-1">思考题 <a class="header-anchor" href="#思考题" aria-label="Permalink to &quot;思考题&quot;">​</a></h2><p>请你开启 cuda 或 metal 特性尝试一下，使用不同的预训练模型看一下效果差异。另外你还可以换用不同的图片来测试一下各种识别效果。</p><p>欢迎你把你实验的结果分享到评论区，也欢迎你把这节课的内容分享给其他朋友，邀他一起学习 Rust，我们下节课再见！</p>`,67)]))}const u=n(t,[["render",y]]);export{m as __pageData,u as default};
